@use 'sass:math';

@mixin font ($fontFamily, $fontSize, $lineHeight: inherit, $color: inherit, $textDecoration: none) {
  font-family: $fontFamily;
  font-size: $fontSize;
  line-height: $lineHeight;
  color: $color;
  text-decoration: $textDecoration;
}

@mixin productTitle {
  font-family: NeueHaasUnicaLight;
  font-size: 18px;
  line-height: 25px;
  color: $mainTextColor;

  @media only screen and (max-width: 540px) {
    font-size: 16px;
    line-height: 16px;
    letter-spacing: 0;
  }
}

@mixin title40 {
  font-family: NeueHaasUnicaMedium;
  font-size: 40px;
  line-height: 60px;
  color: $mainTextColor;

  @media only screen and (max-width: 1124px) {
    font-size: 32px;
  }

  @media only screen and (max-width: 540px) {
    font-size: 28px;
    line-height: 44px;
  }
}

@mixin fontNeueHaasRegular {
  font-family: NeueHaasUnicaRegular;
  font-size: 18px;
  line-height: 13px;
  color: $mainTextColor;

  @media only screen and (max-width: 540px) {
    font-size: 16px;
    line-height: 16px;
  }
}

@mixin flex ($flexDirection: row, $justifyContent: flex-start, $alignItems: center) {
  display: flex;
  flex-direction: $flexDirection;
  justify-content: $justifyContent;
  align-items: $alignItems;
}

@mixin arrowButton ($backgroundColor: $light, $color: $mainTextColor, $height: 35) {
  background-color: $backgroundColor;
  color: $color;
  border: 2px solid $mainTextColor;
  border-radius: 3px;
  border-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  cursor: pointer;
  position: relative;
  height: #{$height}px;

  &:after {
    content: '';
    display: flex;
    width: #{math.sqrt($height * $height / 2) - 2}px;
    height: #{math.sqrt($height * $height / 2) - 2}px;
    background-color: transparent;
    border-right: 2px solid $mainTextColor;
    border-bottom: 2px solid $mainTextColor;
    transform: rotate(-45deg);
    right: -#{$height / 2 - $height / 7}px;
    position: absolute;
    top: #{($height - math.sqrt($height * $height / 2) - 4) / 2}px;
    border-bottom-right-radius: 3px;
  }

  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: -#{$height / 2 - $height / 20}px;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: #{$height / 2 - 2}px 0 #{$height / 2 - 2}px #{$height / 2 - 2}px;
    border-color: transparent transparent transparent $backgroundColor;
  }
}

@mixin placeholder ($component: 'input') {
  $marginBottom: (
    'input': -7px,
    'textarea': 15px,
  );

  label {
    font-family: NeueHaasUnicaLight;
    font-size: 20px;
    line-height: 10px;
  }

  label::before {
    content: attr(title);
    position: absolute;
    bottom: 50%;
    left: 6px;
    font-family: NeueHaasUnicaLight;
    font-size: 20px;
    line-height: 10px;
    color: $inputText;
    transition: 300ms all;
    transform: translateY(-50%);
    letter-spacing: -0.3px;

    @media only screen and (max-width: 540px) {
      font-size: 14px;
      letter-spacing: 0;
      line-height: 8px;
    }
  }

  #{$component} {
    @include font(NeueHaasUnicaRegular, 25px, 38px);

    @media only screen and (max-width: 768px) {
      font-size: 28px;
    }
    @media only screen and (max-width: 540px) {
      font-size: 16px;
      line-height: 26px;
    }

    &:focus {
      outline: 0;
      background-color: $light;
    }

    &:focus + label::before, &:valid + label::before {
      bottom: map-get($map: $marginBottom, $key: $component);
    }
  }
}